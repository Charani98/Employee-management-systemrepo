@using PagedList.Mvc
@model  PagedList.IPagedList<MVC.Models.RolesModel>

@{
    ViewBag.Title = "Role Types";
}

<h2>Employee Types</h2>

<p>
    <a href="@Url.Action("RoleCreation","Role Types")" class="btn btn-info btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-info-circle"></i>
        </span>
        <span class="text">Create New</span>
    </a>
</p>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Roles Types Table</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">

            @if (Model != null && Model.Count() > 0)
            {
                using (Html.BeginForm())
                {

                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                        <tr>
                            @*<th>
                                      @Html.ActionLink("Employee Type ID", "Index",
                                new { sortBy = ViewBag.IDSortParm })
                                  </th>*@
                            <th>
                                @Html.ActionLink("Role", "Index",
                          new { sortBy = ViewBag.NameSortParm })
                            </th>
                            <th>
                                @Html.Label("Options")
                            </th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.EmployeeTypeID)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.RoleName)
                                </td>
                                <td>
                                    <a href="@Url.Action("RoleCreation", "RolesTypes", new { name = item.RoleName })">Edit</a>
                                    <a onclick="Delete(@item.RoleName)"> Delete</a>
                                </td>
                            </tr>
                        }
                    </table>
                    <script>
                        document.write('<a href="' + document.referrer + '" class="btn btn-light btn-icon-split"><span class="icon text-gray-600"><i class= "fas fa-arrow-left"></i></span ><span class="text">Go Back</span></a>');
                    </script>
                }
            }
            else
            {

                <p class="h4 text-danger font-weight-bold text-center">NO ITEMS MATCHED YOUR SEARCH QUERY!</p>
                @Html.ActionLink("Back to Full List", "Index", "Home")

            }

            <hr />

            <div class="text-center">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortBy = Request["sortBy"] }), PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function Delete (name){
            alertify.confirm('Employee management system', 'Are you sure to delete This record', function () {
                window.location.href = '@Url.Action("Delete", "RolesTypes")/' + name;
            }, null);

        }
    </script>
}
